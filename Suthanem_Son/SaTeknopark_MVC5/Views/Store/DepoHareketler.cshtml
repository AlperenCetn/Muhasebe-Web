
@{
    ViewBag.Title = "Depo Hareketleri";
}

@*<div class="row wrapper border-bottom white-bg page-heading">
        <div class="col-lg-10">
            <h3></h3>
            <ol class="breadcrumb">

                <li class="breadcrumb-item">
                    <a href="@Url.Action("OnMuhasebeAnaSayfa", "Anasayfa")">Anasayfa</a>
                </li>
                <li class="active breadcrumb-item">

                    <strong style="color : black">Depo Hareketler</strong>
                </li>

            </ol>
        </div>
    </div>*@

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox " style="box-shadow: 8px 14px 12px gray">
                <div class="ibox-title ">


                    <div class="row" style="background-color:white">

                        <div class="col-md-3">
                            <div class="">
                                <label><b>Başlangıç Tarihi</b></label>

                                <input type="date" id="min" class="form-control" value="@Convert.ToDateTime(new DateTime(2020,1,1,0,0,0)).ToString("yyyy-MM-dd")" name="min">
                            </div>

                        </div>
                        <div class="col-md-3">
                            <div class="pl-0">
                                <label><b>Bitiş Tarihi</b></label>

                                <input type="date" id="max" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="max">
                            </div>

                        </div>
                        <div class="col-md-3 px-1">
                            <div class="form-group">
                                <label><b>Gönderen Depo</b></label>
                                @Html.DropDownList("PersonelTeknik", new SelectList(AyarMetot.DepoListesi(Session["FirmaID"].ToString()), "Value", "Text"), "Seçiniz",
                                    new { @id = "PersonelTeknik", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3 px-1">
                            <div class="form-group">
                                <label><b>Alan Depo</b></label>
                                @Html.DropDownList("PersonelTeknik2", new SelectList(AyarMetot.DepoListesi(Session["FirmaID"].ToString()), "Value", "Text"), "Seçiniz",
                                    new { @id = "PersonelTeknik2", @class = "form-control" })
                            </div>
                        </div>

                    </div>


                    <br />






                    @*<button onclick="Temizle()" style='background-color: dimgray; color: white' type="button" class="btn-white btn btn-xs" data-toggle="modal" data-target="#UyeOl">
                            Yeni Depo Hareketi
                        </button>*@
                    <button onclick="Temizle()" style='background-color: #1ab394;color: white; box-shadow: 2px 2px 2px grey;' type="button" class="btn btn-sm" data-toggle="modal" data-target="#UyeOl">
                        Yeni Depo Hareketi
                    </button>

                    <h5>&nbsp; Depo Hareketleri Listesini görüntülemektesiniz</h5>


                </div>
                <div class="ibox-content">

                    <table id="example" class="table table-striped table-bordered table-hover dataTables-example" style="width: 100%">
                        <thead>
                            <tr>
                                <th>İşlem No</th>
                                <th>İşlem Türü</th>
                                <th>İşlem Tarihi</th>
                                <th>Ürün Kodu</th>
                                <th>Ürün Adı</th>
                                <th>Miktar</th>
                                <th>Fiyat</th>
                                <th>Tutar</th>
                                <th>Açıklama</th>
                                <th>Personel</th>
                                <th>Gönderen Depo</th>
                                <th>Alan Depo</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>

                            </tr>
                        </thead>

                    </table>

                </div>
            </div>
        </div>
    </div>

</div>

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/tagInputsStyles")
    @Styles.Render("~/plugins/duallistStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @*<script src="~/Content/DataTables/datatables.js"></script>*@
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.all.min.js"></script>
    <script src="~/Scripts/mask.js"></script>
    <script src="~/Scripts/musteri.js"></script>
    <script src="~/Content/datatables.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/moment-with-locales.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/moment.min.js"></script>
    <link href="~/Scripts/easy/easy-autocomplete.css" rel="stylesheet" />
    <link href="~/Scripts/easy/easy-autocomplete.min.css" rel="stylesheet" />
    <script src="~/Scripts/easy/jquery.easy-autocomplete.js"></script>
    <script src="~/Scripts/easy/jquery.easy-autocomplete.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.ui.position.js"></script>


    <script type="text/javascript">

                var oTable;
                $.fn.dataTableExt.afnFiltering.push(
                    function (oSettings, aData, iDataIndex) {
                        var min = moment(document.getElementById('min').value).format('YYYY.MM.DD');
                        var max = moment(document.getElementById('max').value).format('YYYY.MM.DD');



                        var iStartDateCol = 12;
                        var iEndDateCol = 12;

                        min = min.substring(0, 4) + min.substring(5, 7) + min.substring(8, 10);
                        max = max.substring(0, 4) + max.substring(5, 7) + max.substring(8, 10);
                        var datofini = aData[iStartDateCol].substring(6, 10) + aData[iStartDateCol].substring(3, 5) + aData[iStartDateCol].substring(0, 2);

                        //return true

                        if (min === "" && max === "") {

                            return true;
                        }
                        else if (min <= datofini && max === "") {

                            return true;
                        }
                        else if (min <= datofini && max >= datofini) {
                            //alert(1);
                            return true;
                        }

                        return false;

                    }
                );

                function setTwoNumberDecimal(event) {
                    this.value = parseFloat(this.value).toFixed(2);
                }

                function Temizle() {

                    window.location.href = "/Store/DepoTransfer";
                }

                function Delete(id) {

                    swal({
                        title: "[Silme Onayı]",
                        text: "Seçili Depo Hareketini silmek istediğinizden emin misiniz?",
                        icon: "warning",
                        dangerMode: true,
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        cancelButtonText: "Hayır",
                        confirmButtonText: "Evet",
                        closeOnCancel: true,
                        closeOnConfirm: true,

                        preConfirm: function() {
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("DeleteStoreProcess", "Store")/' + id,
                                success: function(data) {
                                    if (data.success) {
                                        oTable.ajax.reload();

                                    }
                                }

                            });
                        }

                    })
                }


                $(document).ready(function () {

                    $("#PersonelTeknik").change(function () {

                        $.fn.dataTableExt.afnFiltering.push(
                            function (oSettings, aData, iDataIndex) {

                                var id = document.getElementById('PersonelTeknik').value;

                                var column = aData[14];
                                if (id == "") {
                                    return true;
                                }
                                if (id == "" || column == " ") {
                                    return true;
                                }

                                else if (id == column) {
                                    return true;
                                }
                                return false;

                            });

                        oTable.draw();

                    });
                    $("#PersonelTeknik2").change(function () {

                        $.fn.dataTableExt.afnFiltering.push(
                            function (oSettings, aData, iDataIndex) {

                                var id = document.getElementById('PersonelTeknik2').value;

                                var column = aData[15];

                                if (id == "") {
                                    return true;
                                }
                                if (id == "" || column == " ") {
                                    return true;
                                }

                                else if (id == column) {
                                    return true;
                                }
                                return false;

                            });

                        oTable.draw();

                    });

                    $("#min").change(function () {
                        var end = this.value;
                        //alert(end);
                        oTable.draw();

                    });
                    $("#max").change(function () {
                        var end = this.value;
                        //alert(this.value);
                        oTable.draw();

                    });


                    oTable = $('.dataTables-example').DataTable({
                        "scrollX": true,
                        pageLength: 10,
                        'columnDefs': [
                         {
                             "targets": 2,
                             "className": "text-right",
                         }],
                        "ajax": {
                            "url": "/Store/GetDepoHareketler",
                            "type": "GET",
                            "datatype": "json",
                        },
                        dom: 'lTfgit',

                        "columns": [

                        { "data": "IslemNo" },
                        { "data": "IslemTuru" },
                        { "data": "IslemTarih" },
                        { "data": "UrunKodu" },
                        { "data": "UrunAdi" },
                        { "data": "Miktar", className: "text-right" },
                        { "data": "Fiyat", className: "text-right" },
                        { "data": "Tutar", className: "text-right" },
                        { "data": "Aciklama" },
                        { "data": "Personel" },
                        { "data": "GonderenDepo" },
                        { "data": "AlanDepo" },
                            { "data": "TarihF2", "visible": false },
                            {
                                "data": null,
                                "render": function(data, type, row) {

                                    return " <div class='btn-group'> " +
                                       // "<a onclick=Goster(" + row.ID + ") style='color:black' class='btn-warning btn btn-xs '>Düzenle</a>" +
                                        "<a onclick=Delete(" + row.ID + ") style='color:white;margin-left:2px' class='btn-danger btn btn-xs'>Sil</a></div>" +
                                    "</div>";


                                },

                            },
                            { "data": "GonderenDepoID", "visible": false},
                            { "data": "AlanDepoID", "visible": false},

                        ],

                        "language": {
                            "sDecimal": ",",
                            "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                            "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                            "sInfoEmpty": "Kayıt yok",
                            "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                            "sInfoPostFix": "",
                            "sInfoThousands": ".",
                            "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                            "sLoadingRecords": "Yükleniyor...",
                            "sProcessing": "İşleniyor...",
                            "sSearch": "Ara:",
                            "sZeroRecords": "Eşleşen kayıt bulunamadı",
                            "oPaginate": {
                                "sFirst": "İlk",
                                "sLast": "Son",
                                "sNext": "Sonraki",
                                "sPrevious": "Önceki"
                            },
                            "oAria": {
                                "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                                "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                            },
                            "select": {
                                "rows": {
                                    "_": "%d kayıt seçildi",
                                    "0": "",
                                    "1": "1 kayıt seçildi"
                                }
                            }
                        },
                        buttons: [
                            { extend: 'copy' },
                            { extend: 'csv' },
                            { extend: 'excel', title: 'ExampleFile' },
                            { extend: 'pdf', title: 'ExampleFile' },

                            {
                                extend: 'print',
                                customize: function (win) {
                                    $(win.document.body).addClass('white-bg');
                                    $(win.document.body).css('font-size', '10px');

                                    $(win.document.body).find('table')
                                            .addClass('compact')
                                            .css('font-size', 'inherit');
                                }
                            }
                        ]

                    });
                    $(function() {
                        $.contextMenu({
                            selector: '.dataTables-example td',
                            callback: function(key, options) {
                                var m = "clicked: " + key;
                                var row = this.closest('tr');
                                var data = oTable.row(this).data();

                                switch (key) {
                                case "yeni":
                                    Temizle();
                                    document.getElementById('YeniStok').click();
                                    break;
                                case "edit":
                                    Goster(data.ID);
                                    break;
                                case "delete":
                                    Delete(data.ID);
                                    break;
                                case "move":
                                    Goster2(data.ID);
                                    break;
                      

                                }
                            },
                            items: {
                                "yeni": { name: "Yeni Depo Hareketi", icon: "edit"},
                               // "edit": {name: "Düzenle", icon: "edit"},
                                "delete": { name: "Sil", icon: "delete" },
                               // "move": { name: "Stok Hareketleri", icon: "paste" },
                                "sep1": "---------",
                                "quit": {name: "Çıkış", icon: function(){
                                    return 'context-menu-icon context-menu-icon-quit';
                                }}
                            }
                        });

                        $('.context-menu-one').on('click', function(e){
                            console.log('clicked', this);
                        })
                    });
                    $('#example tbody').on('dblclick', 'tr', function () {

                        var data = oTable.row(this).data();


                        Goster(data.ID);

                    });
                });

    </script>
}
