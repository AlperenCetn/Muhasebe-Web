
@{
    ViewBag.Title = "Finans Hareketleri   ";


    int KasaID2 = @ViewBag.KasaID;
    int BankaID2 = @ViewBag.BankaID;
}


@*<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h3></h3>
        <ol class="breadcrumb">
           
            <li class="breadcrumb-item">
                <a href="@Url.Action("OnMuhasebeAnaSayfa", "AnaSayfa")">Anasayfa</a>
            </li>

            <li class="active breadcrumb-item">

                <strong style="color : black">Finans Hareketleri</strong>
            </li>
        </ol>
    </div>
</div>*@



<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">

            <div class="ibox" style="box-shadow: 8px 14px 12px gray">


                <div class="ibox-title">
                    <div class="row" style="background-color:white">

                        <div class="col-md-3 pt-2">
                            <div class="">
                                <label><b>Başlangıç Tarihi</b></label>

                                <input type="date" id="min" class="form-control" value="@Convert.ToDateTime(new DateTime(2020,1,1,0,0,0)).ToString("yyyy-MM-dd")" name="min">
                            </div>

                        </div>
                        <div class="col-md-3 pt-2">
                            <div class="pl-0">
                                <label><b>Bitiş Tarihi</b></label>

                                <input type="date" id="max" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="max">
                            </div>

                        </div>
                        <div class="col-md-3 px-1 pt-2">
                            <div class="form-group">
                                <label><b>Personel</b></label>
                                @Html.DropDownList("PersonelTeknik", new SelectList(AyarMetot.PersonelList("-1", Session["FirmaID"].ToString()), "Value", "Text"), "Seçiniz",
                            new { @id = "PersonelTeknik", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3 pl-1 pt-2">
                            <div class="form-group">
                                @Html.Hidden("vKasaID2", KasaID2)
                            </div>
                        </div>
                        <div class="col-md-3 pl-1">
                            <div class="form-group">
                                @Html.Hidden("vBankaID2", BankaID2)
                            </div>
                        </div>
                    </div>
                    <div class="row pl-3">
                        <h4>Finans Hareketleri Listesini Görüntülemektesiniz</h4>
                    </div>
                </div>



                <div class="ibox-content">

                    <table class="table table-striped table-bordered table-hover dataTables-example" style="width: 100%">
                        <thead>
                            <tr>


                                <th>ID</th>
                                <th>İşlem Türü</th>
                                <th>İşlem No</th>
                                <th>Cari </th>
                                <th>Açıklama </th>
                                <th>Kasa</th>
                                <th>Banka</th>
                                <th>Giriş</th>
                                <th>Çıkış</th>
                                <th>Bakiye </th>
                                <th>PB </th>
                                <th>Personel</th>
                                <th>Özel Kod</th>
                                <th>Açıklama</th>
                                <th>Tarih</th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>
                                <th></th>

                            </tr>
                        </thead>
                    </table>

                </div>

            </div>
        </div>
    </div>
</div>



@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}

@section Scripts {
    <script src="~/Content/DataTables/datatables.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.all.min.js"></script>
    <script src="~/Scripts/mask.js"></script>
    <script src="~/Scripts/musteri.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/moment-with-locales.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/moment.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.contextMenu.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-contextmenu/2.7.1/jquery.ui.position.js"></script>

    <script type="text/javascript">

        var oTable;
        $.fn.dataTableExt.afnFiltering.push(
            function (oSettings, aData, iDataIndex) {
                var min = moment(document.getElementById('min').value).format('YYYY.MM.DD');
                var max = moment(document.getElementById('max').value).format('YYYY.MM.DD');



                var iStartDateCol = 14;
                var iEndDateCol = 14;

                min = min.substring(0, 4) + min.substring(5, 7) + min.substring(8, 10);
                max = max.substring(0, 4) + max.substring(5, 7) + max.substring(8, 10);
                var datofini = aData[iStartDateCol].substring(6, 10) + aData[iStartDateCol].substring(3, 5) + aData[iStartDateCol].substring(0, 2);


                //return true

                if (min === "" && max === "") {

                    return true;
                }
                else if (min <= datofini && max === "") {

                    return true;
                }
                else if (min <= datofini && max >= datofini) {
                    //alert(1);
                    return true;
                }

                return false;

            }
        );






        function Delete(id,tablo) {


            swal({
                title: "[Silme Onayı]",
                text: "Seçili işlemi silmek istediğinizden emin misiniz?",
                icon: "warning",
                dangerMode: true,
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                cancelButtonText: "Hayır",
                confirmButtonText: "Evet",
                closeOnCancel: true,
                closeOnConfirm: true,

                preConfirm: function() {
                    $.ajax({
                        type: "POST",
                        url: '/Finans/DeleteFinans?id='+id+'&tablo='+tablo,
                        success: function(data) {
                            if (data.success) {
                                swal("Başarılı", "Silme işlemi başarı ile tamamlandı.", "success");
                                oTable.ajax.reload();

                            }
                            else  {
                                swal("Uyarı", data.message, "warning");

                            }
                        }

                    });
                }

            })
        }



        function Goster(id,islemtipi) {


            if (islemtipi == "KKT" || islemtipi == "T" || islemtipi == "O" || islemtipi == "G" || islemtipi == "H") {
                window.location.href = "/Tables/YeniTahsilat?id=" + id;
            }
            else if (islemtipi == "E" || islemtipi == "A") {
                window.location.href = "/Finans/YeniMasraf?id=" + id;
            }
            else if ( islemtipi == "M" || islemtipi == "B") {
                window.location.href = "/Finans/YeniGelir?id=" + id;
            }
            


        }
        function Yazdır(id) {

            window.open("/Adv/TahsilatYazdir?ID=" + id);

        }

        $(document).ready(function () {

            $("#PersonelTeknik").change(function () {

                $.fn.dataTableExt.afnFiltering.push(
                    function (oSettings, aData, iDataIndex) {

                        var id = document.getElementById('PersonelTeknik').value;

                        var column = aData[18];

                        if (id == "") {
                            return true;
                        }
                        if (id == "" || column == " ") {
                            return true;
                        }

                        else if (id == column) {
                            return true;
                        }
                        return false;

                    });

                oTable.draw();

            });

            $("#min").change(function () {
                var end = this.value;
                //alert(end);
                oTable.draw();

            });
            $("#max").change(function () {
                var end = this.value;
                //alert(this.value);
                oTable.draw();

            });

            var url = '';
            var kasaid = $("#vKasaID2").val();
            var bankaid = $("#vBankaID2").val();
            
            if (kasaid == -1) {
                url = '@Url.Action("GetFinans", "Finans")?KasaID=-1&BankaID=' + bankaid;
            }
            else if (bankaid == -1) {
                url = '@Url.Action("GetFinans", "Finans")?KasaID=' + kasaid;
            } else {
                url = '@Url.Action("GetFinans","Finans")?KasaID="' + kasaid + "&BankaID =" + bankaid;
            }
            oTable = $('.dataTables-example').DataTable({
                "scrollX": true,
                pageLength: 25,
                "ajax": {
                    "url": url,
                    "type": "GET",
                    "datatype": "json",
                },

                dom: 'lTfgti',
                "columns": [
                      {
                          "data": "ID", visible: false
                    },
                    {
                        "data": "IslemNo"
                    },
                    {
                        "data": "IslemTuru"
                    },
                   
                    {
                        "data": "Cari"
                    },
                    {
                        "data": "Aciklama"
                    },
                    {
                        "data": "Kasa"
                    },
                    {
                        "data": "Banka"
                    },
                    {
                        "data": "Giris", className: "text-right"
                    },
                    {
                        "data": "Cikis", className: "text-right"
                    },
                    {
                        "data": "Bakiye", className: "text-right"
                    },
                    {
                        "data": "PB"
                    },
                    {
                        "data": "Personel"
                    },
                    {
                        "data": "OzelKodAdi"
                    },
                    {
                        "data": "Aciklama"
                    },
                      { "data": "TarihF2" },
                    {
                        "data": null, "render": function (data, type, row) {


                            return " <div class='btn-group'> " +


                                "<a onclick=Goster(" + row.ID + ",'" + row.IslemTipi + "') style='color:black' class='btn-warning btn btn-xs '>Düzenle</a>" +

                                "<a onclick=Delete(" + row.ID + ",'" + row.Tablo + "') style='color:black' class='btn btn-danger btn-xs '>Sil</a>" +
                                "<a onclick=Yazdır(" + row.ID + ") style='color:white;margin-left:2px' class='btn-primary btn btn-xs'>Yazdır</a></div>"+

                                " </div>";

                        },

                    },
                    {
                      "data": "ID", visible: false
                    },
                    {
                      "data": "Tablo", visible: false
                    },
                  

                    { "data": "PersonelID", visible: false },

                    { "data": "ID", visible: false },

                    { "data": "IslemTipi", visible: false },
                ],

                "language": {
                    "sDecimal": ",",
                    "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "sInfoEmpty": "Kayıt yok",
                    "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                    "sLoadingRecords": "Yükleniyor...",
                    "sProcessing": "İşleniyor...",
                    "sSearch": "Ara:",
                    "sZeroRecords": "Eşleşen kayıt bulunamadı",
                    "oPaginate": {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    "oAria": {
                        "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "0": "",
                            "1": "1 kayıt seçildi"
                        }
                    }
                },
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]

            });
            $(function() {
                $.contextMenu({
                    selector: '.dataTables-example td',
                    callback: function(key, options) {
                        var m = "clicked: " + key;
                        var row = this.closest('tr');
                        var data = oTable.row(this).data();

                        switch (key) {
                        case "yeni":
                            var url = '@Url.Action("YeniTahsilat", "Tables")';
                            window.location.href = url;
                            break;
                        case "edit":
                                Goster(data.ID, data.IslemTipi);
                            break;
                        case "delete":
                                Delete(data.ID, data.Tablo);
                            break;
                        case "yazdir":
                            Yazdır(data.ID);
                            break;
                        case "dekont":
                            var url = '@Url.Action("Dekont", "Dekont")';
                            window.location.href = url;
                            break;

                        }
                    },
                    items: {
                        "yeni": { name: "Yeni Hareket", icon: "edit"},
                        "edit": {name: "Düzenle", icon: "edit"},
                        "delete": { name: "Sil", icon: "delete" },
                        "yazdir": { name: "Yazdır", icon: "paste" },
                        "sep1": "---------",
                        "quit": {name: "Çıkış", icon: function(){
                            return 'context-menu-icon context-menu-icon-quit';
                        }}
                    }
                });

                $('.context-menu-one').on('click', function(e){
                    console.log('clicked', this);
                })
            });



            $('#dataTables-example tbody').on('dblclick', 'tr', function () {

                var data = oTable.row(this).data();


                Goster(data.ID,data.IslemTipi);

            });
        });

    </script>
}