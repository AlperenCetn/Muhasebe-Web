@model SaTeknopark_MVC5.Models.TECHNICAL
@{
    ViewBag.Title = "Bordrolar";
}




@*<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h3></h3>
        <ol class="breadcrumb">

            <li class="breadcrumb-item">
                <a href="@Url.Action("OnMuhasebeAnaSayfa", "AnaSayfa")">Anasayfa</a>
            </li>

            <li class="active breadcrumb-item">

                <strong style="color : black">Bordrolar</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>*@


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox " style="box-shadow: 8px 14px 12px gray">
                <div class="ibox-title ">



                    <div class="row" style="background-color:white">

                        <div class="col-md-3">
                            <div class="">
                                <label><b>Başlangıç Tarihi</b></label>

                                <input type="date" id="min" class="form-control" value="@Convert.ToDateTime(new DateTime(2020,1,1,0,0,0)).ToString("yyyy-MM-dd")" name="min">
                            </div>

                        </div>
                        <div class="col-md-3">
                            <div class="pl-0">
                                <label><b>Bitiş Tarihi</b></label>

                                <input type="date" id="max" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" name="max">
                            </div>

                        </div>
                        <div class="col-md-3 px-1">
                            <div class="form-group">
                                <label><b>Personel</b></label>
                                @Html.DropDownList("PersonelTeknik", new SelectList(AyarMetot.PersonelList("-1", Session["FirmaID"].ToString()), "Value", "Text"), "Tüm Personeller", new { @id = "PersonelTeknik", @class = "form-control" })
                            </div>
                        </div>
                    </div>


                    <br />

                    <!--Modal Sonu-->


                    <h5>&nbsp; Bordrolar Listesini Görüntülemektesiniz</h5>
                    <br />

                    <a onclick="Temizle()" href="@Url.Action("YeniCekSenet", "Payroll",new {ceksenet = 0})" style='background-color:#1ab394;color:white; box-shadow: 2px 2px 2px grey;' type="button" class="btn btn-sm">
                        Yeni Çek
                    </a>
                    <a onclick="Temizle()" href="@Url.Action("YeniCekSenet", "Payroll",new {ceksenet = 1})" style='background-color:#1ab394;color:white; box-shadow: 2px 2px 2px grey;' type="button" class="btn btn-sm">
                        Yeni Senet
                    </a>

                </div>
                <div class="ibox-content">

                    <table class="table table-striped table-bordered table-hover dataTables-example" id="example" style=" width: 100%">
                        <thead>
                            <tr>
                                <th>Kayıt Tipi</th>
                                <th>İşlem Numarası</th>
                                <th>Kayıt Tarihi</th>
                                <th>Cari</th>
                                <th>Personel</th>
                                <th>Tutar</th>

                                <th>PB</th>
                                <th>Ortalama Vade </th>
                                <th>Açıklama</th>
                                <th> </th>
                            </tr>
                        </thead>


                    </table>

                </div>
            </div>
        </div>
    </div>

</div>



@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/awesomeCheckboxStyles")
    @Styles.Render("~/plugins/clockpickerStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/switcheryStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/plugins/nouiSliderStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
    @Styles.Render("~/plugins/imagecropperStyles")
    @Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
    @Styles.Render("~/plugins/select2Styles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/tagInputsStyles")
    @Styles.Render("~/plugins/duallistStyles")
}

@section Scripts {
    @* @Scripts.Render("~/plugins/dataTables")*@
    <script src="~/Content/DataTables/datatables.js"></script>
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/ionRange")
    @Scripts.Render("~/plugins/nouiSlider")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/knob")
    @Scripts.Render("~/plugins/imagecropper")
    @Scripts.Render("~/plugins/colorpicker")
    @Scripts.Render("~/plugins/clockpicker")
    @Scripts.Render("~/plugins/dateRange")
    @Scripts.Render("~/plugins/select2")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/tagInputs")
    @Scripts.Render("~/plugins/duallist")
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.2.0/sweetalert2.all.min.js"></script>
    <script src="~/multiselect.min.js"></script>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/moment-with-locales.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/moment.min.js"></script>

    <script type="text/javascript">

        var oTable;
        $.fn.dataTableExt.afnFiltering.push(
            function(oSettings, aData, iDataIndex) {
                var min = moment(document.getElementById('min').value).format('YYYY.MM.DD');
                var max = moment(document.getElementById('max').value).format('YYYY.MM.DD');


                var iStartDateCol = 10;
                var iEndDateCol = 10;

                min = min.substring(0, 4) + min.substring(5, 7) + min.substring(8, 10);
                max = max.substring(0, 4) + max.substring(5, 7) + max.substring(8, 10);
                var datofini = aData[iStartDateCol].substring(6, 10) +
                    aData[iStartDateCol].substring(3, 5) +
                    aData[iStartDateCol].substring(0, 2);

                var genel = true;

                if (min === "" && max === "") {

                } else if (min > datofini && max == "") {

                    genel = false;
                } else if (max < datofini && min == "") {

                    genel = false;
                } else if (min > datofini || max < datofini) {
                    genel = false;
                }

                var id = $("#PersonelTeknik").val();


                var column = aData[11];


                if (id === "" && column === "") {

                } else if (id == "") {

                } else if (id != column) {
                    genel = false;
                }


                return genel;

            }
        );

        function Goster(id) {

            window.location.href = "/Fatura/YeniSatis?id=" + id;

        }

        function Goster(id) {
            var sayi = '-2'
            window.location.href = "/Payroll/YeniCekSenet?id=" + id;

        }
        function Delete(id) {

            swal({
                title: "[Silme Onayı]",
                text: "Seçili bordroyu silmek istediğinizden emin misiniz?",
                icon: "warning",
                dangerMode: true,
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                cancelButtonText: "Hayır",
                confirmButtonText: "Evet",
                closeOnCancel: true,
                closeOnConfirm: true,

                preConfirm: function() {
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("DeletePayroll", "Payroll")/' + id,
                        success: function(data) {
                            if (data.success) {
                                oTable.ajax.reload();

                            }
                        }

                    });
                }

            })
        }


        $(document).ready(function() {

            $("#min").change(function() {
                var end = this.value;
                //alert(end);
                oTable.draw();

            });
            $("#max").change(function() {
                var end = this.value;
                //alert(this.value);
                oTable.draw();

            });
            $("#PersonelTeknik").change(function() {

                var end = this.value;
                oTable.draw();

            });

            $(".select2_demo_3").select2({
                allowClear: true
            });

            oTable = $('.dataTables-example').DataTable({
                "scrollX": true,
                pageLength: 25,
                "ajax": {
                    "url": "/Payroll/GetBordrolar",
                    "type": "GET",
                    "datatype": "json",
                },
                buttons: true,
                dom: '<"html5buttons"B>lTfgit',
                "columns": [
                    {
                        "data": "KayitTipi"
                    },
                    {
                        "data": "IslemNumarasi"

                    },
                    {
                        "data": "KayitTarihi"
                    },
                    {
                        "data": "Cari"


                    },
                    {
                        "data": "Personel"

                    },
                    {
                        "data": "Tutar",
                        className: "text-right"
                    },
                    {
                        "data": "PB"
                    },
                    {
                        "data": "OrtalamaVade",
                    },
                    {
                        "data": "Aciklama",
                    },
                    {
                        "data": null,
                        "render": function(data, type, row) {

                            return " <div class='btn-group'> " +
                                "<a onclick=Goster(" +
                                row.ID +
                                ") style='color:black' class='btn-warning btn btn-xs '>Düzenle</a>" +
                                "<a onclick=Delete(" +
                                row.ID +
                                ") style='color:white;margin-left:2px' class='btn-danger btn btn-xs'>Sil</a></div>" +
                                "<a onclick=Yazdır(" +
                                row.ID +
                                ") style='color:white;margin-left:2px' class='btn-primary btn btn-xs'>Yazdır</a></div>"
                            "</div>";


                        },

                    },
                    {
                        "data": "IslemTarihiF",
                        "visible": false
                    },
                    {
                        "data": "PersonelAdi",
                        "visible": false
                    },
                ],


                "language": {
                    "sDecimal": ",",
                    "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                    "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                    "sInfoEmpty": "Kayıt yok",
                    "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                    "sLoadingRecords": "Yükleniyor...",
                    "sProcessing": "İşleniyor...",
                    "sSearch": "Ara:",
                    "sZeroRecords": "Eşleşen kayıt bulunamadı",
                    "oPaginate": {
                        "sFirst": "İlk",
                        "sLast": "Son",
                        "sNext": "Sonraki",
                        "sPrevious": "Önceki"
                    },
                    "oAria": {
                        "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                        "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                    },
                    "select": {
                        "rows": {
                            "_": "%d kayıt seçildi",
                            "0": "",
                            "1": "1 kayıt seçildi"
                        }
                    }
                },

                buttons: [
                    { extend: 'excel', title: 'ExampleFile' },
                    { extend: 'pdf', title: 'ExampleFile' },
                ]

            });
            $('#example tbody').on('dblclick',
                'tr',
                function() {

                    var data = oTable.row(this).data();


                    Goster(data.ID);

                });


        });

    </script>



}
